use TerranSCV as knowledge.
use TerranSCV as actionspec.

module TerranSCVEvent {
	% The handling of the mineralfields	percepts (update amounts).
	% Amount is always >1, as mineralFields dissapear from the game when empty.
	forall bel(mineralField(Id,Amount)), not(percept(mineralField(Id,Amount,_,_,_))) do delete(mineralField(Id,Amount)).
	forall percept(mineralField(Id,Amount,_,_,_)), not(bel(mineralField(Id,Amount), assigned(_))) do insert(mineralField(Id,Amount)).
	
	% The handling of the vespeneGeyser percepts (update amounts).
	% Amount is always >1, as vespeneGeysers dissapear from the game when empty.
	forall bel(vespeneGeyser(Id,Amount,X,Y)), not(percept(vespeneGeyser(Id,Amount,_,X,Y))) do delete(vespeneGeyser(Id,Amount,X,Y)).
	forall percept(vespeneGeyser(Id,Amount,_,X,Y)), not(bel(vespeneGeyser(Id,Amount,X,Y))) do insert(vespeneGeyser(Id,Amount,X,Y)).
	
	% The handling of the workerActivity percept
	if percept(workerActivity(NewActivity)), bel(workerActivity(OldActivity), NewActivity \= OldActivity) 
	then delete(workerActivity(OldActivity)) + insert(workerActivity(NewActivity)).
	%handling of constructionSite percept.
	forall bel(constructionSite(X,Y)), not(percept(constructionSite(X,Y))) do delete(constructionSite(X,Y)).
	forall percept(constructionSite(X,Y)), not(bel(constructionSite(X,Y)))do insert(constructionSite(X,Y)).
	% supply depot handling
	forall percept(friendly('Terran Supply Depot',Id,_),friendly('Terran Supply Depot',Id2,_),Id\=Id2) do insert(supplyMax1).
	forall percept(friendly('Terran Barracks',Id,_),friendly('Terran Barracks',Id2,_),Id\=Id2) do insert(barrack).
	forall percept(resources(_,G,_,_)), bel(G>=100) do insert(supplyMax2).
	
	%message handling	
	if (mainBase).sent(assigned(1)) then insert(assigned(1),gasHandler).
	if (mainBase).sent(assigned(2)) then insert(assigned(2)).
	if (mainBase).sent(assigned(3)) then insert(assigned(3)).
	if (mainBase).sent(assigned(4)) then insert(assigned(4)).
	if (mainBase).sent(assigned(5)) then insert(gasHandler).
	% Check the refinaryBuild goals.
	if goal(refinaryBuild(Id,X,Y)), not(bel(vespeneGeyser(Id,Amount,X,Y))) then insert(refinaryBuild(Id,X,Y)).
	% Check the gathered goals
	if percept(friendly("Terran Refinery",Id,_)), bel(gasHandler)then adopt(gasGathered(Id)).
	%check the barrackbuild goals.
	if bel(constructionSite(X,Y),assigned(2)) then adopt(barrackBuild(X,Y)).
	if bel(barrack, constructionSite(X,Y)) then drop(barrackBuild(X,Y)).
	if goal(gathered(Id)), not(bel(mineralField(Id,_))), not(bel(friendly("Terran Refinery",Id,_))) then insert(gathered(Id)).
	%check the supplyDepot goals.
	if bel(constructionSite(X,Y),assigned(3)) then adopt(depotBuild(X,Y)).	
	%resource update(update amounts)
	if percept(resources(M, G, Cs, Ts)) then insert (resources(M, G, Cs, Ts)).
	if percept(resources(Mnew, Gnew, Csnew, Tsnew)), bel(resources(M, G , Cs, Ts), Mnew \= M ,Gnew \= G, Csnew \= Cs, Tsnew \= Ts)
		then delete(resources(M, G , Cs, Ts)) + insert (resources(Mnew, Gnew, Csnew, Tsnew)).
}